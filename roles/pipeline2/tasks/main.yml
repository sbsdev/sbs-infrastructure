---
- name: copy deb
  copy:
    src: "{{ item }}"
    dest: /tmp
  with_items:
    - "{{ pipeline2_deb }}"

- name: install pipeline2
  apt:
    deb: "/tmp/{{ item }}"
  with_items:
    - "{{ pipeline2_deb }}"

# in some cases it is beneficial to remove the pipeline database
# (to get rid of old jobs, etc). But this causes problems when the
# deb isn't actually reinstalled and we restart the service.
# - name: remove database
#   file: path="{{ daisy_pipeline2_path }}"
#         state=absent

- name: set REMOTE=true for pipeline2
  lineinfile:
    path: /etc/default/daisy-pipeline2
    regexp: "^#?REMOTE=(true|false)$"
    line: 'REMOTE=true'
  notify:
    - restart pipeline2

- name: set memory for pipeline2
  lineinfile:
    path: /etc/default/daisy-pipeline2
    line: 'export JAVA_MAX_MEM=2G'
  notify:
    - restart pipeline2

- name: disallow local filesystem interactions
  lineinfile: dest="{{ daisy_pipeline2_path }}/system.properties"
              regexp='^#?org.daisy.pipeline.ws.localfs='
              line='org.daisy.pipeline.ws.localfs=false'
  notify:
    - restart pipeline2

- name: set authentication to false
  lineinfile: dest="{{ daisy_pipeline2_path }}/system.properties"
              regexp='^#?org.daisy.pipeline.ws.authentication='
              line='org.daisy.pipeline.ws.authentication=false'
  notify:
    - restart pipeline2

- name: set client secret in server
  lineinfile: dest="{{ daisy_pipeline2_path }}/system.properties"
              regexp='^org.daisy.pipeline.ws.authentication.secret='
              line='org.daisy.pipeline.ws.authentication.secret={{ pipeline2_client_secret }}'
  notify:
    - restart pipeline2

- name: set liblouis.external to true
  # not sure if this is really needed. AFAIK liblouis comes with the
  # braille modules. See
  # https://github.com/sbsdev/deployment/blob/master/src/plans/pipeline2.clj#L31
  lineinfile: dest="{{ daisy_pipeline2_path }}/system.properties"
              line='org.daisy.pipeline.liblouis.external=true'

# install sbs specific pipeline modules
- name: copy sbs pipeline module debs
  copy:
    src: "{{ item }}"
    dest: /tmp
  with_items:
    - "{{ sbs_module_debs }}"

- name: install sbs pipeline module debs
  apt:
    deb: "/tmp/{{ item }}"
  with_items:
    - "{{ sbs_module_debs }}"

- name: create the runit startup scripts
  include: runit.yml

