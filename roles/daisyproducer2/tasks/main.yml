---

- name: create an install directory
  file:
    path: "{{ daisyproducer2_install_dir }}"
    state: directory

- name: Download the daisyproducer2 jar file
  get_url:
    url: https://github.com/sbsdev/daisyproducer2/releases/download/{{ daisyproducer2_version }}/daisyproducer2-{{ daisyproducer2_version }}-standalone.jar
    dest: "{{ daisyproducer2_install_dir }}/daisyproducer2-{{ daisyproducer2_version }}-standalone.jar"
  notify:
    - restart daisyproducer2

- name: create a version independent link to the jar file
  file:
    src: "daisyproducer2-{{ daisyproducer2_version }}-standalone.jar"
    dest: "{{ daisyproducer2_install_dir }}/daisyproducer2.jar"
    state: link

- name: create a config directory
  file:
    path: /etc/daisyproducer2
    state: directory

- name: create a config file
  template:
    src: config.edn.j2
    dest: /etc/daisyproducer2/config.edn
    mode: '0600'
  notify:
    - restart daisyproducer2

- name: create directory for the daisyproducer log files
  file:
    path: /var/log/daisyproducer2
    state: directory
    mode: 0755

- name: create the logback config file
  template:
    src: logback.xml.j2
    dest: /etc/daisyproducer2/logback.xml
    mode: '0600'
  notify:
    - restart daisyproducer2

# - name: make sure archive is owned by www-data

- name: create spool directories for ebooks
  file:
    path: "{{ item }}"
    state: directory
    mode: 0775
  with_items:
    - "/var/spool/daisyproducer"
    - "/var/spool/daisyproducer/processed"
    - "/var/spool/daisyproducer/invalid"
    - "/var/spool/daisyproducer/it"

- name: create a spool directory for the ebooks which are served to the online player
  file:
    path: "{{ online_player_spool_dir }}"
    state: directory

- name: create a temp directory for generated resources
  file:
    path: "{{ generated_resources_spool_dir }}"
    state: directory

- name: create a directory for the service
  file:
    path: /etc/sv/daisyproducer2
    state: directory

- name: create an init script
  template:
    src: run.j2
    dest: /etc/sv/daisyproducer2/run
    mode: '0755'

- name: enable the service
  runit:
    name: daisyproducer2
    enabled: yes

- name: install the hyphenation tables
  include_tasks: hyphenation.yml

- name: create a script to import data from ABACUS
  template:
    src: dp2_abacus_import.j2
    dest: /usr/local/sbin/dp2_abacus_import.sh
    mode: '0700'

- name: add a cron job to run the daisyproducer ABACUS import
  cron:
    name: "run the daisyproducer ABACUS import every 10 minutes on weekdays"
    minute: "*/10"
    hour: "6-20"
    weekday: "1-5"
    cron_file: "daisyproducerImportABACUS"
    user: root
    job: "/usr/local/sbin/dp2_abacus_import.sh > /dev/null"

- name: remove legacy cron jobs
  cron:
    name: "{{ item.name }}"
    cron_file: "{{ item.file }}"
    state: absent
  loop:
    - { name: 'run the daisyproducer ABACUS import every 10 minutes on weekdays', file: 'daisyproducerCleanOldVersions' }
    - { name: 'run the daisyproducer ABACUS import every 10 minutes on weekdays', file: 'daisyproducerImportABACUSProductData' }

- name: create an sites available file for nginx
  template:
    src: daisyproducer2-site.j2
    dest: /etc/nginx/sites-available/daisyproducer2
    mode: '0644'
  notify:
    - restart nginx

- name: create a link in sites enabled for nginx
  file:
    src: /etc/nginx/sites-available/daisyproducer2
    dest: /etc/nginx/sites-enabled/daisyproducer2
    owner: root
    group: root
    state: link
  notify:
    - restart nginx

- name: remove the default site from nginx
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify:
    - restart nginx
