
# HTTP server (redirects to HTTPS)
server {
    listen 80;
    server_name localhost {{ ansible_host }} {{ ansible_host }}.sbszh.ch xmlp xmlp.sbszh.ch;

    # serve the DTBook schema (presumably for oXygen)
    location /schema/ {
        alias /usr/share/xml/schema/dtbook/;
	autoindex on;
    }

    location / {
        # redirect all HTTP to HTTPS
        return 301 https://{% if ansible_host == "xmlp01" %}xmlp{% else %}{{ ansible_host }}{% endif %}.sbszh.ch$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl;
    server_name localhost {{ ansible_host }} {{ ansible_host }}.sbszh.ch xmlp xmlp.sbszh.ch;

    ssl_certificate /etc/ssl/letsencrypt/fullchain.pem;
    ssl_certificate_key /etc/ssl/letsencrypt/privkey.pem;

    root /usr/share/nginx/www;
    index index.html index.htm;

    access_log /var/log/nginx/{{ role_name }}_access.log;
    error_log /var/log/nginx/{{ role_name }}_error.log;

    location / {
        proxy_pass http://localhost:3000/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect  off;

        # allow for very long requests, such as generation of expensive previews
        proxy_read_timeout 1h;

        # allow upload of very large images
        client_max_body_size 50m;
    }

    # serve the ebooks for the online player from a spool directory
    location /ebooks/ {
        alias /var/spool/ebooks/;
	autoindex on;
        add_header 'Access-Control-Allow-Origin' '*';
    }
}
