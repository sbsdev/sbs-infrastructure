---

- name: install Java7
  apt: name=openjdk-7-jdk

- name: install genisoimage
  apt: name=genisoimage

- name: download wildfly
  get_url: url=http://download.jboss.org/wildfly/8.2.0.Final/wildfly-8.2.0.Final.tar.gz
           dest=/tmp/wildfly-8.2.0.Final.tar.gz

# wildfly runs under a special user
# - name: create a wildfly user
#   shell: adduser --system --group --no-create-home --home /opt/wildfly --uid 35 --quiet --disabled-login wildfly || true

- name: install wildfly
  unarchive: src=/tmp/wildfly-8.2.0.Final.tar.gz
             copy=no
             dest={{ wildfly_prefix }}
             owner={{ wildfly_user }} group={{ wildfly_group }}
             creates={{ wildfly_prefix }}/wildfly-8.2.0.Final/standalone/configuration/standalone-full.xml
  register: install_wildfly

- name: create a symlink
  file: path={{ wildfly_prefix }}/wildfly
        src={{ wildfly_prefix }}/wildfly-8.2.0.Final
        owner={{ wildfly_user }} group={{ wildfly_group }}
        state=link

- name: make sure wildfly gets enough memory
  template: src=standalone.conf.j2
            dest={{ wildfly_prefix }}/wildfly/bin/standalone.conf

- name: create wildfly defaults file
  template: src=wildfly.conf.j2
            dest=/etc/default/wildfly

- name: create startup script
  template: src=wildfly-init-debian.sh.j2
            dest=/etc/init.d/wildfly
            mode=0755

- name: enable the wildfly service
  service: name=wildfly enabled=yes

- name: add an admin user to be able to access the wildfly admin console
  shell: "{{ wildfly_prefix }}/wildfly/bin/add-user.sh --silent -u {{ madras2_admin_user }} -p {{ madras2_admin_password }}"

- name: create config file
  template: src=standalone-full.xml.j2
            dest={{ wildfly_prefix }}/wildfly/standalone/configuration/standalone-full.xml
  when: install_wildfly.changed

- name: create spool directory for outgoing files to ABACUS
  file: path=/var/spool/abacus state=directory
        owner={{ wildfly_user }} group={{ wildfly_group }}

- name: mount all needed directories from the main file server and from the studio server
  mount: name={{ item.name }} src={{ item.src }} fstype=nfs state=mounted
  with_items:
    - { name: '/mnt/a03/agadir', src: 'a03:/disk/sdb1/agadir/in'}
    - { name: '/mnt/a03/encoded', src: 'a03:/disk/sdb1/madras2/encoded'}
    - { name: '/mnt/a03/iso', src: 'a03:/disk/sdb1/madras2/iso'}
    - { name: '/mnt/a03/split', src: 'a03:/disk/sdb1/madras2/split'}
    - { name: '/mnt/miloun/structured', src: 'miloun:/mnt/studio/studio/madras2/structured'}
    - { name: '/mnt/miloun/recorded', src: 'miloun:/mnt/studio/studio/madras2/recorded'}
    - { name: '/mnt/miloun/recording', src: 'miloun:/mnt/studio/studio/madras2/recording'}

# FIXME: this fails because root apparently cannot mount this
# - name: mount the archive for other productions
#   mount: name={{ item.name }} src={{ item.src }} fstype=nfs state=mounted
#   with_items:
#     - { name: '/mnt/a03/d14', src: 'a03:/mnt/archive/d14'}

- name: create symlinks to the mounts so that the dirs are where madras2 expects them
  file: path={{ item.path }} src={{ item.src }} state=link
        owner={{ wildfly_user }} group={{ wildfly_group }}
  with_items:
    - { path: '/var/spool/agadir/books', src: '/mnt/a03/agadir' }
    - { path: '/var/spool/agadir/other', src: '/mnt/a03/d14' }
    - { path: '/var/lib/mdr2/structured', src: '/mnt/miloun/structured' }
    - { path: '/var/lib/mdr2/recorded', src: '/mnt/miloun/recorded' }
    - { path: '/var/lib/mdr2/recording', src: '/mnt/miloun/recording' }
    - { path: '/var/lib/mdr2/encoded', src: '/mnt/a03/encoded' }
    - { path: '/var/lib/mdr2/iso', src: '/mnt/a03/iso' }
    - { path: '/var/lib/mdr2/split', src: '/mnt/a03/split' }

- name: start the wildfly service
  service: name=wildfly state=started

# - name: copy madras application
#   copy: src=/home/eglic/src/mdr2/target/mdr2.war dest=/tmp/mdr2.war

# - name: deploy madras application
#   jboss: src=/tmp/mdr2.war deployment=mdr2.war state=present
#          deploy_path={{ wildfly_prefix }}/wildfly/standalone/deployments

- name: deploy madras application
  copy: src=/home/eglic/src/mdr2/target/mdr2.war dest=/opt/wildfly/standalone/deployments/mdr2.war
