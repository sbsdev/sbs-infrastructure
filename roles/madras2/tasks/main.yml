---

- name: install Java7
  apt: name=openjdk-7-jdk

- name: download wildfly
  get_url: url=http://download.jboss.org/wildfly/8.1.0.Final/wildfly-8.1.0.Final.tar.gz
           dest=/tmp/wildfly-8.1.0.Final.tar.gz

- name: create a wildfly user
  shell: adduser --system --group --no-create-home --home /opt/wildfly --uid 35 --quiet --disabled-login wildfly || true

- name: install wildfly
  unarchive: src=/tmp/wildfly-8.1.0.Final.tar.gz
             copy=no
             dest=/opt/
             owner=wildfly group=wildfly
             creates=/opt/wildfly-8.1.0.Final/standalone/configuration/standalone-full.xml
  register: install_wildfly

# owner and group are ignored by the ansible unarchive task, see
# ansible/ansible-modules-core#234, so we need to explicitly set them
- name: set ownership
  file: path=/opt/wildfly-8.1.0.Final owner=wildfly group=wildfly recurse=yes

- name: create a symlink
  file: path=/opt/wildfly src=/opt/wildfly-8.1.0.Final owner=wildfly group=wildfly state=link

- name: create wildfly defaults file
  template: src=wildfly.conf.j2
            dest=/etc/default/wildfly

- name: create startup script
  template: src=wildfly-init-debian.sh.j2
            dest=/etc/init.d/wildfly
            mode=0755

- name: enable the wildfly service
  service: name=wildfly enabled=yes

- name: add an admin user to be able to access the wildfly admin console
  shell: /opt/wildfly/bin/add-user.sh --silent -u {{ madras2_admin_user }} -p {{ madras2_admin_password }}

- name: create config file
  template: src=standalone-full.xml.j2
            dest=/opt/wildfly/standalone/configuration/standalone-full.xml
  when: install_wildfly.changed

- name: create directories
  file: path={{ item }} state=directory
  with_items:
    - /var/spool/mdr2
    - /var/spool/abacus
    - /var/spool/agadir
    - /var/lib/mdr2/structured
    - /var/lib/mdr2/recording
    - /var/lib/mdr2/recorded
    - /var/lib/mdr2/encoded
    - /var/lib/mdr2/iso

- name: start the wildfly service
  service: name=wildfly state=started

# - name: copy madras application
#   copy: src=/home/eglic/src/mdr2/target/mdr2.war dest=/tmp/mdr2.war

# - name: deploy madras application
#   jboss: src=/tmp/mdr2.war deployment=mdr2.war state=present
#          deploy_path=/opt/wildfly/standalone/deployments

- name: deploy madras application
  copy: src=/home/eglic/src/mdr2/target/mdr2.war dest=/opt/wildfly/standalone/deployments/mdr2.war
