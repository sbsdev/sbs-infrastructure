---
- hosts: daisyproducer
  sudo: yes
  vars_files:
    - "vars/passwords.yml"
  
  tasks:
    - name: enable unsigned packages
      # FIXME: I guess it would be better to have signed packages. For
      # an explanation on how to do this see
      # http://kaivanov.blogspot.ch/2012/08/creating-apt-repository-with-reprepro.html.
      # Alternatively maybe we should drop the idea of a local repo
      # altogether and move to ansible 1.6 where you can just specify
      # local debs to the apt module. Simplicity matters.
      lineinfile: dest=/etc/apt/apt.conf line="APT::Get::AllowUnauthenticated \"true\";" create=yes

    # most dependencies are packaged as debs
    - name: deploy debs
      apt: name={{ item }} state=latest update_cache=yes
      with_items:
        - daisy-pipeline2
        - dtbook-to-odt
        - sbs-hyphenation-tables
        - tcolorbox
        - liblouis2
        - liblouis-data
        - python-louis
        - dtbook2sbsform
        - sbs-braille-tables
      notify:
        - restart apache
          
    # pipeline is a bit special in that we need to copy something after installing the deb
    - name: deploy pipeline1
      apt: name=daisy-pipeline state=latest
      register: install_pipeline1
      notify:
        - restart apache

    # copy the sbs specific dtbook2latex so that it is picked up by the transformer
    - name: copy dtbook2latex_sbs.xsl
      command: cp dtbook2latex_sbs.xsl dtbook2latex.xsl 
               chdir=/opt/pipeline/transformers/se_tpb_dtbook2latex
      when: install_pipeline1.changed
      notify:
        - restart apache

    - name: deploy dtbook hyphenator
      unarchive: src=files/dtbook_hyphenator.zip dest=/opt
      notify:
        - restart apache

    # install the daisyproducer web app
    - name: pull daisyproducer from git
      git: repo=git://github.com/sbsdev/daisyproducer.git 
           dest={{ daisyproducer_app_path }}
      register: install_daisyproducer
      notify:
        - restart apache

    - name: fix daisyproducer app path in abacus_import cron job
      lineinfile: dest={{ daisyproducer_app_path }}/abacus_import/misc/cron.d/daisyproducerImportABACUSProductData 
                  regexp='^INSTALLDIR=/path/to/daisyproducer$' 
                  line='INSTALLDIR={{ daisyproducer_app_path }}'
      when: install_daisyproducer.changed

    - name: adapt local settings for daisyproducer
      template: src=templates/settings_local.j2 
                dest={{ daisyproducer_app_path }}/settings_local.py 
                backup=yes
                mode=644
      when: install_daisyproducer.changed

    - name: build localized daisyproducer messages
      command: django-admin compilemessages chdir={{ daisyproducer_app_path }}
      when: install_daisyproducer.changed

    - name: migrate daisyproducer db
      django_manage: command=migrate app_path={{ daisyproducer_app_path }}
      when: install_daisyproducer.changed

  handlers:
    - name: restart apache
      service: name=apache2 state=restarted